
.page-loading {
    --contrast-color: #292930;

    --time: 1000ms;
    --animation-settings: var(--time) ease infinite;

    width: 100%;
    background: var(--bg-color);
    font-size: 16px;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    font-family: sans-serif;

    .container {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;

        @media (max-width: 768px), (hover: none) and (pointer: coarse) {
            scale: 1.3;
        }
    }

    .loader {
        width: 50px;
        aspect-ratio: 1;
        border-radius: 50%;
        background:
            radial-gradient(farthest-side,#ffa516 94%,#0000) top/8px 8px no-repeat,
            conic-gradient(#0000 30%,#ffa516);
        -webkit-mask: radial-gradient(farthest-side,#0000 calc(100% - 8px),#000 0);
        animation: l13 1s infinite linear;
    }

    @keyframes l13{
        100%{transform: rotate(1turn)}
    }
}


// CSS custom property registration remains same
@property --widthSquare {
    syntax: "<length>";
    initial-value: 20px;
    inherits: false;
}


@keyframes roll {
    25% {
        transform: translateX(calc(var(--widthSquare) * -1));
    }
    50% {
        transform: rotate(90deg) translateY(var(--widthSquare));
    }
    75% {
        transform: rotate(180deg) translateY(var(--widthSquare));
    }
    100% {
        transform: rotate(180deg) translate(var(--widthSquare), var(--widthSquare));
    }
}

@property --widthScroll {
    syntax: "<length>";
    initial-value: 90px;
    inherits: false;
}

.infinite-scroll {
    position: relative;
    width: calc(var(--widthSquare) * 3);
    height: 2px;
    overflow: hidden;

    &::before,
    &::after {
        content: "";
        position: absolute;
        width: var(--widthSquare);
        height: 100%;
        background: var(--contrast-color);
    }

    &::before {
        left: calc(50% - var(--widthSquare) / 2);
        animation: moveBefore var(--animation-settings);
    }

    &::after {
        left: 100%;
        animation: moveAfter var(--animation-settings);
    }
}

@keyframes moveBefore {
    25% {
        left: 0;
    }
    50% {
        left: 0;
    }
    75% {
        left: 0;
    }
    100% {
        left: -30px;
    }
}

@keyframes moveAfter {
    25% {
        left: 100%;
    }
    50% {
        left: calc(100% - var(--widthSquare));
    }
    75% {
        left: calc(100% - var(--widthSquare));
    }
    100% {
        left: calc(50% - var(--widthSquare) / 2);
    }
}
